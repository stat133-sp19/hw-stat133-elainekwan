---
title: "Getting Started with Binomial"
author: Elaine Kwan 
date: 4/25/19
output: rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Introduction}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---
\usepackage{amsmath}

```{r, include = FALSE, warning = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

Before we get started, we first load the "binomial" package.
```{r setup}
library(binomial)
```

## Binomial
The package "binomial" implements functions for calculating probabilities of a Binomial random variable, as well as related calculations such as the probability distribution, the expected value, variance, etc.

## Binomial Choose
The function "bin_choose()" calculates the number of combinations in which *k* successes can occur in *n* trials. We recall that the number of combinations "n choose k" is given by:
\[
    \binom{n}{k} = \frac{n!}{k!(n-k)!}
\]
The bin_choose() function takes in arguments *n* and *k*, where *k* should be a vector of non-negative integer(s) less than or equal to *n*. Below are examples of how you can invoke bin_choose(). 
```{r choose}
bin_choose(n = 5, k = 2)
bin_choose(5, 0)
bin_choose(5, 1:3)
```

## Binomial Probability
The function bin_probability() calculates the probability of successes in a given number of trials. The function takes in three arguments: *success*, *trials*, and *prob*. If any of the arguments are invalid, then bin_probability will raise an error. The binomial probability is given by the formula:
\[
Pr (X = k) = \binom{n}{k}p^k(1-p)^{n-k}
\]
Below are examples of how you can invoke bin_probability().
```{r bin_probability}
# probability of getting 2 successes in 5 trials
# (assuming prob of success = 0.5)
bin_probability(success = 2, trials = 5, prob = 0.5)

# probabilities of getting 2 or less successes in 5 trials
# (assuming prob of success = 0.5)
bin_probability(success = 0:2, trials = 5, prob = 0.5)

# 55 heads in 100 tosses of a loaded coin with 45% chance of heads
bin_probability(success = 55, trials = 100, prob = 0.45)
```

## Binomial Distribution
The function bin_distribution() uses the bin_probability() function to return a data frame with the probability distribution *successes* in the first column, and *probability* in the second column. The output of this function is of two classes: "bindis" and "data.frame." Below is an example of how you can invoke bin_distribution().

```{r bin_distribution}
# binomial probability distribution
bin_distribution(trials = 5, prob = 0.5)
```
Objects of class "bindis" can also be plotted using the *plot* function. Plotting a "bindis" object graphs a barplot to display the probability histogram of a binomial distribution. Here is an example of how to invoke the plot method. 

```{r plot_distribution}
# plotting binomial probability distribution
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
```

## Binomial Cumulative
The function bin_cumulative() uses the bin_probability() function to return a data frame with the probability distribution *successes* in the first column, *probability* in the second column, and *cumulative* in the third column. The column *cumulative* is the cumulative sum of the probabilities in the second column. The output of this function is of two classes: "bincum" and "data.frame." Below is an example of how you can invoke bin_cumulative().

```{r bin_cumulative}
# binomial cumulative distribution
bin_cumulative(trials = 5, prob = 0.5)
```

Objects of class "bincum" can also be plotted using the *plot* function. Plotting a "bincum" object graphs probability over successes. Here is an example of how to invoke the plot method. 
```{r plot_cumulative}
# plotting binomial cumulative distribution
dis2 <- bin_cumulative(trials = 5, prob = 0.5)
plot(dis2)
```

## Binomial Variable
The function bin_variable() returns a list of class "binvar" - that is a *binomial random variable* - that is a list containing the elements *trials* (the number of trials) and *prob* (the probability of success). Objects of class "binvar" also have corresponding *print()* and *summary()* methods.

Hereâ€™s an example of how you can invoke bin_variable(), and its printed output:
```{r bin_variable}
bin1 <- bin_variable(trials = 10, p = 0.3)
bin1
```

Furthermore, a user can get a full summary description of an object "binvar" by calling the summary() function:
```{r bin_variable_summary}
bin1 <- bin_variable(trials = 10, p = 0.3)
binsum1 <- summary(bin1)
binsum1
```

## Functions of Measures
Finally, the "binomial" package contains main functions for each of the summary measures: e.g. bin_mean(), bin_variance(), etc. These are main functions that take two arguments: *trials* and *prob*. Here are some examples for how to invoke these functions.
```{r measures}
bin_mean(10, 0.3)
bin_variance(10, 0.3)
bin_mode(10, 0.3)
bin_skewness(10, 0.3)
bin_kurtosis(10, 0.3)

```




